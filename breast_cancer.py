# -*- coding: utf-8 -*-
"""Breast Cancer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uof65SKaOxoEyljTRXIZnnrEs0eetOme
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import classification_report as rep,confusion_matrix as cm
import seaborn as sns

#Importing The Dataset
data = pd.read_csv('data.csv')

data.columns

data.head(10)

#Dropping empty and obsolete columns
data = data.drop('Unnamed: 32',axis=1)
data = data.drop('id',axis=1)

#Moving Diagnosis to end
cols = list(data.columns.values)
cols.pop(cols.index('diagnosis'))
data = data[cols+['diagnosis']]

#Plotting Graphs to understand the problems well
import seaborn as sns
sns.pairplot(data,hue='diagnosis',vars=['radius_mean','texture_mean','area_mean','perimeter_mean','smoothness_mean'])

#Converting alphabetical results to  binary
data = data.replace(to_replace=['B','M'],value=[0,1])

#Separating dependent and independent variables
x = data.iloc[:,:-1].values
y = data.iloc[:,-1].values

#Splitting the variables into into test and training sets
from sklearn.model_selection import train_test_split as tts
x_train,x_test,y_train,y_test = tts(x,y,test_size = 0.2,random_state = 0)

#Kernel Support Vector Classification

from sklearn.svm import SVC

classifier_svc = SVC(kernel='linear',random_state=0)
classifier_svc.fit(x_train,y_train)
y_svc_pred = classifier_svc.predict(x_test)

#Simple Support Vector Classification

from sklearn.svm import SVC

classifier_svm = SVC()
classifier_svm.fit(x_train,y_train)
y_svm_pred = classifier_svm.predict(x_test)

#Naive Bayes Classification

from sklearn.naive_bayes import GaussianNB
classifier_naive = GaussianNB()
classifier_naive.fit(x_train, y_train)
y_naive_pred = classifier_naive.predict(x_test)

#KNN Classification

from sklearn.neighbors import KNeighborsClassifier
classifier_knn = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)
classifier_knn.fit(x_train, y_train)
y_knn_pred = classifier_knn.predict(x_test)

#Results of the classifications

con_svc = cm(y_test,y_svc_pred)
con_naive = cm(y_test,y_naive_pred)
con_svm = cm(y_test,y_svm_pred)
con_knn = cm(y_test,y_knn_pred)
print("SVC RESULTS \n",rep(y_test,y_svc_pred),"\n")
print("NAIVE BAYES RESULTS\n",rep(y_test,y_naive_pred),"\n")
print("SIMPLE SVM RESULTS\n",rep(y_test,y_svm_pred),"\n")
print("KNN RESULTS\n",rep(y_test,y_knn_pred),"\n")

con_svc

pd.DataFrame(x_test).head(3)

pd.DataFrame(y_test).head(3)

pd.DataFrame(y_knn_pred).head(3)

pd.DataFrame(y_svc_pred).head(3)

pd.DataFrame(y_svm_pred).head(3)

